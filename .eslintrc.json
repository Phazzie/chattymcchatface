{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "jsdoc",
    "import",
    "max-params-no-constructor"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    // Single Responsibility Principle
    "max-lines-per-function": ["error", { "max": 25, "skipBlankLines": true, "skipComments": true }],
    "max-lines": ["error", { "max": 80, "skipBlankLines": true, "skipComments": true }],
    
    // Open/Closed Principle (harder to enforce with linting)
    "jsdoc/require-jsdoc": ["warn", {
      "publicOnly": true,
      "require": {
        "ClassDeclaration": true,
        "MethodDefinition": true
      }
    }],
    
    // Liskov Substitution Principle
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }],
    
    // Interface Segregation Principle
    "max-lines-per-function": ["error", { "max": 25, "skipBlankLines": true, "skipComments": true }],
    
    // Dependency Inversion Principle
    "import/no-cycle": "error",
    "max-params-no-constructor/max-params-no-constructor": ["error", 3],
    
    // General code quality
    "complexity": ["error", { "max": 5 }],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      }
    ]
  }
}
